{"version":3,"sources":["webpack:///./src/pages/blogs.js"],"names":["Blogs","props","updateFilterPost","event","byArea","target","getAttribute","value","setState","posts","data","allContentfulBlogs","edges","selectedArea","filter","edge","node","category","itens","bind","filterPost","state","componentDidMount","this","render","renderPosts","map","item","index","includes","title","push","key","className","to","slug","featureImage","fluid","objectFit","objectPosition","moment","updatedAt","format","keywords","id","onClick","length","onChange","Component","pageQuery"],"mappings":"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","file":"component---src-pages-blogs-js-35aff9fdda00b1775875.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport Img from \"gatsby-image\";\r\nimport moment from 'moment';\r\nimport { Link } from \"gatsby\";\r\nimport { render } from 'react-dom';\r\n\r\nexport default class Blogs extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.updateFilterPost = this.updateFilterPost.bind(this);\r\n    this.filterPost = \"\"\r\n    this.state = {\r\n      posts: props.data.allContentfulBlogs.edges,\r\n      selectedArea:\"\"\r\n    }\r\n    this.data = props.data;\r\n    this.itens = []\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      posts: this.data.allContentfulBlogs.edges\r\n    })\r\n  }\r\n\r\n  updateFilterPost = event =>{\r\n    let byArea = event.target.getAttribute(\"value\")\r\n    if(byArea == null){\r\n      byArea = event.target.value\r\n    }\r\n    if(byArea == \"\"){\r\n      this.setState({\r\n        posts: this.data.allContentfulBlogs.edges,\r\n        selectedArea: byArea\r\n      })\r\n    }else{\r\n      this.setState({\r\n        posts: this.data.allContentfulBlogs.edges.filter(edge =>\r\n          (edge.node.category == byArea)\r\n        ),\r\n        selectedArea: byArea\r\n      })\r\n    }\r\n    this.itens = []\r\n  }\r\n\r\n  render() {\r\n    this.itens = []\r\n    let renderPosts = this.state.posts.map((item, index) => {\r\n      if(!this.itens.includes(item.node.title)){\r\n        this.itens.push(item.node.title);   \r\n        return (\r\n          \r\n          <li key={index} className=\"item\">\r\n            <div className=\"inner\">\r\n              <Link className=\"link\" to={item.node.slug} />\r\n              {item.node.featureImage ? (\r\n                <Img\r\n                  fluid={item.node.featureImage.fluid}\r\n                  objectFit=\"cover\"\r\n                  objectPosition=\"50% 50%\"\r\n                />\r\n              ) : (\r\n                <div className=\"no-image\"></div>\r\n              )}\r\n              <div className=\"details\">\r\n                <h3 className=\"title\">{item.node.title}</h3>\r\n                <span className=\"date\">\r\n                  <i className=\"fas fa-calendar-alt\"></i>{\" \"}\r\n                  {moment(item.node.updatedAt).format(\"LL\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        );\r\n      }\r\n    })\r\n\r\n\r\n    return (\r\n      <Layout>\r\n      <SEO\r\n        title=\"Posts\"\r\n        keywords={[`Developer`, `Web`, `Software`, 'Coding', 'The Life Coding', 'Programação']}\r\n      />\r\n        <div className=\"site-container blogs-page\" id=\"BlogsPage\">\r\n          <div className=\"filter-post-area\">\r\n              <ul>                \r\n              <div className={\"filter-option \" + (this.state.selectedArea === \"\"? \"selected-filter-option\" : \"\")} value=\"\" onClick={this.updateFilterPost}>TODOS</div>\r\n                <div className={\"filter-option \" + (this.state.selectedArea === \"carreira\"? \"selected-filter-option\" : \"\")} value=\"carreira\" onClick={this.updateFilterPost}>CARREIRA</div>\r\n                <div className={\"filter-option \" + (this.state.selectedArea === \"algoritmo\"? \"selected-filter-option\" : \"\")} value=\"algoritmo\" onClick={this.updateFilterPost}>ALGORITMOS E ESTRUTURAS DE DADOS</div>\r\n                <div className={\"filter-option \" + (this.state.selectedArea === \"coding\"? \"selected-filter-option\" : \"\")} value=\"coding\" onClick={this.updateFilterPost}>CÓDIGOS / HANDS ON</div>\r\n                <div className={\"filter-option \" + (this.state.selectedArea === \"qualidade\"? \"selected-filter-option\" : \"\")} value=\"qualidade\" onClick={this.updateFilterPost}>QUALIDADE DE SOFTWARE</div>\r\n                <div className={\"filter-option \" + (this.state.selectedArea === \"conceitos\"? \"selected-filter-option\" : \"\")} value=\"conceitos\" onClick={this.updateFilterPost}>CONCEITOS DE PROGRAMAÇÃO</div>\r\n              </ul>\r\n          </div>\r\n          <div className=\"container\">\r\n\r\n           { <ul\r\n              className={`blogs-list ${\r\n                this.data.allContentfulBlogs.edges.length < 5 ? \"few-blogs\" : \"\"\r\n              }`}\r\n            >     \r\n            <div className=\"filter-post-area-select\">\r\n              <select className=\"form-control select-area-post\" onChange={this.updateFilterPost}>                \r\n                <option value=\"\" onClick={this.updateFilterPost}>TODOS</option>\r\n                <option value=\"carreira\" onClick={this.updateFilterPost}>CARREIRA</option>\r\n                <option value=\"algoritmo\" onClick={this.updateFilterPost}>ALGORITMOS E ESTRUTURAS DE DADOS</option>\r\n                <option value=\"coding\" onClick={this.updateFilterPost}>CÓDIGOS / HANDS ON</option>\r\n                <option value=\"qualidade\" onClick={this.updateFilterPost}>QUALIDADE DE SOFTWARE</option>\r\n                <option value=\"conceitos\" onClick={this.updateFilterPost}>CONCEITOS DE PROGRAMAÇÃO</option>\r\n              </select>\r\n          </div>  \r\n            {renderPosts}\r\n            </ul> }\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n//render(<Blogs />, document.getElementsByClassName(\"root\"));\r\nexport const pageQuery = graphql`\r\n  query BlogsQuery {\r\n    allContentfulBlogs(sort: {fields: createdAt, order: DESC}) {\r\n      edges {\r\n        node {\r\n          title\r\n          slug\r\n          featureImage {\r\n            fluid(maxWidth: 1500) {\r\n              base64\r\n              aspectRatio\r\n              src\r\n              srcSet\r\n              srcWebp\r\n              srcSetWebp\r\n              sizes\r\n            }\r\n          }\r\n          createdAt\r\n          updatedAt\r\n          category\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}