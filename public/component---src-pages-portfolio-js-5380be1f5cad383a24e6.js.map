{"version":3,"sources":["webpack:///./src/pages/portfolio.js"],"names":["ProfessionalExp","lazy","Work","Service","renderLoader","Portfolio","render","data","this","props","title","keywords","className","id","fallback","allContentfulWorks","Component","pageQuery"],"mappings":"qOAQA,IAAMA,EAAkBC,gBAAK,kBAAM,qCAC7BC,EAAOD,gBAAK,kBAAM,2DAClBE,EAAUF,gBAAK,kBAAM,2DAErBG,EAAe,kBAAM,0CACNC,E,gLAEjBC,OAAA,WAAU,IACEC,EAASC,KAAKC,MAAdF,KACR,OACI,kBAAC,UAAD,KACI,kBAAC,IAAD,CACIG,MAAM,YACNC,SAAU,CAAC,iBAAD,2CAEd,yBAAKC,UAAU,4BAA4BC,GAAG,SAC1C,yBAAKD,UAAU,aACX,kBAAC,WAAD,CAAUE,SAAUV,KAAgB,kBAACD,EAAD,CAASI,KAAMA,KACnD,kBAAC,WAAD,CAAUO,SAAUV,KAAgB,kBAACJ,EAAD,CAAiBO,KAAMA,EAAKQ,sBAChE,kBAAC,WAAD,CAAUD,SAAUV,KAAgB,kBAACF,EAAD,CAAMK,KAAMA,EAAKQ,0B,GAdtCC,aAuB1BC,EAAS","file":"component---src-pages-portfolio-js-5380be1f5cad383a24e6.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\n//import Service from \"../components/service\";\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n//import Work from \"../components/work\";\r\n//import ProfessionalExp from \"../components/professional-experience\";\r\n\r\nconst ProfessionalExp = lazy(() => import('../components/professional-experience'));\r\nconst Work = lazy(() => import('../components/work'));\r\nconst Service = lazy(() => import('../components/service'));\r\n\r\nconst renderLoader = () => <p>Carregando</p>;\r\nexport default class Portfolio extends Component {\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        return (\r\n            <Layout>\r\n                <SEO\r\n                    title=\"Portfolio\"\r\n                    keywords={[`Donato William`, `Backend Developer`, `Developer`, `Blogs`]}\r\n                />\r\n                <div className=\"site-container blogs-page\" id=\"Blogs\">\r\n                    <div className=\"container\">\r\n                        <Suspense fallback={renderLoader()}><Service data={data}></Service></Suspense>\r\n                        <Suspense fallback={renderLoader()}><ProfessionalExp data={data.allContentfulWorks}></ProfessionalExp></Suspense>\r\n                        <Suspense fallback={renderLoader()}><Work data={data.allContentfulWorks}></Work></Suspense>    \r\n\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n      );\r\n    }\r\n  }\r\n\r\nexport const pageQuery = graphql`\r\nquery PortfolioQuery {\r\n  allContentfulService {\r\n    edges {\r\n      node {\r\n        title\r\n        description {\r\n          childMarkdownRemark {\r\n            html\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  allContentfulWorks {\r\n    edges {\r\n      node {\r\n        siteName\r\n        url\r\n        image {\r\n          fluid(maxWidth: 600) {\r\n            base64\r\n            aspectRatio\r\n            src\r\n            srcSet\r\n            srcWebp\r\n            srcSetWebp\r\n            sizes\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  jsLogo: file(relativePath: { eq: \"js-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  javaLogo: file(relativePath: { eq: \"java-logo.jpg\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  springLogo: file(relativePath: { eq: \"spring-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  gitLogo: file(relativePath: { eq: \"git-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  dockerLogo: file(relativePath: { eq: \"docker-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  oracleLogo: file(relativePath: { eq: \"oracle-logo.jpg\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  angularLogo: file(relativePath: { eq: \"angular-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  hibernateLogo: file(relativePath: { eq: \"hibernate-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n}\r\n`;"],"sourceRoot":""}