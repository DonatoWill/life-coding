{"version":3,"sources":["webpack:///./src/components/professional-experience.js","webpack:///./src/pages/portfolio.js","webpack:///./src/components/service.js","webpack:///./src/components/work.js"],"names":["ProfessionalExperience","render","this","props","data","className","id","Component","Portfolio","title","keywords","allContentfulWorks","pageQuery","service","fixed","jsLogo","childImageSharp","javaLogo","springLogo","oracleLogo","gitLogo","dockerLogo","work","edges","map","item","index","key","href","node","url","image","fluid","objectFit","objectPosition","siteName"],"mappings":"2LAGqBA,E,gLACnBC,OAAA,WACmBC,KAAKC,MAAdC,KACR,OACE,yBAAKC,UAAU,eAAeC,GAAG,QAC/B,yBAAKD,UAAU,aACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,6BAEF,wBAAIA,UAAU,iB,GAT4BE,a,sFCM/BC,E,gLAEjBP,OAAA,WAAU,IACEG,EAASF,KAAKC,MAAdC,KACR,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIK,MAAM,QACNC,SAAU,CAAC,iBAAD,2CAEd,yBAAKL,UAAU,4BAA4BC,GAAG,SAC1C,yBAAKD,UAAU,aAEX,kBAAC,IAAD,CAASD,KAAMA,IAEf,kBAAC,IAAD,CAAMA,KAAMA,EAAKO,qBAEjB,kBAAC,EAAD,CAAiBP,KAAMA,EAAKO,yB,GAjBbJ,aAyB1BK,EAAS,c,gIC/BDC,E,gLACnBZ,OAAA,WAAU,IACAG,EAASF,KAAKC,MAAdC,KACR,OACE,yBAAKC,UAAU,kBAAkBC,GAAG,WAClC,yBAAKD,UAAU,aACb,yBAAKA,UAAU,gBACb,8CAEF,yBAAKA,UAAU,OACb,kBAAC,IAAD,CACIS,MAAOV,EAAKW,OAAOC,gBAAgBF,MACnCT,UAAU,cAGd,kBAAC,IAAD,CACIS,MAAOV,EAAKa,SAASD,gBAAgBF,MACrCT,UAAU,cAGd,kBAAC,IAAD,CACIS,MAAOV,EAAKc,WAAWF,gBAAgBF,MACvCT,UAAU,cAGd,kBAAC,IAAD,CACIS,MAAOV,EAAKe,WAAWH,gBAAgBF,MACvCT,UAAU,cAGd,kBAAC,IAAD,CACIS,MAAOV,EAAKgB,QAAQJ,gBAAgBF,MACpCT,UAAU,cAGd,kBAAC,IAAD,CACIS,MAAOV,EAAKiB,WAAWL,gBAAgBF,MACvCT,UAAU,kB,GArCWE,c,sHCAhBe,E,gLACnBrB,OAAA,WAAU,IACAG,EAASF,KAAKC,MAAdC,KACR,OACE,yBAAKC,UAAU,eAAeC,GAAG,QAC/B,yBAAKD,UAAU,aACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,aAEF,wBAAIA,UAAU,aACXD,EAAKmB,MAAMC,KAAI,SAACC,EAAMC,GACrB,OACE,wBAAIC,IAAKD,EAAOrB,UAAU,QACxB,yBAAKA,UAAU,SACb,uBAAGuB,KAAMH,EAAKI,KAAKC,KACjB,kBAAC,IAAD,CACEhB,MAAOW,EAAKI,KAAKE,MAAMC,MACvBC,UAAU,QACVC,eAAe,YAEjB,0BAAM7B,UAAU,QAAQoB,EAAKI,KAAKM,oB,GApBtB5B","file":"component---src-pages-portfolio-js-56f05d27fc3d3458fbbb.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Img from \"gatsby-image\";\r\n\r\nexport default class ProfessionalExperience extends Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <div className=\"work section\" id=\"Work\">\r\n        <div className=\"container\">\r\n          <div className=\"section-head\">\r\n            <h2 className=\"text-center\">ExperiÃªncia Profissional</h2>\r\n          </div>\r\n          <ul className=\"work-list\">\r\n            \r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\nimport Service from \"../components/service\";\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport Work from \"../components/work\";\r\nimport ProfessionalExp from \"../components/professional-experience\";\r\n\r\nexport default class Portfolio extends Component {\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        return (\r\n            <Layout>\r\n                <SEO\r\n                    title=\"About\"\r\n                    keywords={[`Donato William`, `Backend Developer`, `Developer`, `Blogs`]}\r\n                />\r\n                <div className=\"site-container blogs-page\" id=\"Blogs\">\r\n                    <div className=\"container\">\r\n\r\n                        <Service data={data}></Service>\r\n                    \r\n                        <Work data={data.allContentfulWorks}></Work>\r\n\r\n                        <ProfessionalExp data={data.allContentfulWorks}></ProfessionalExp>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n      );\r\n    }\r\n  }\r\n\r\nexport const pageQuery = graphql`\r\nquery PortfolioQuery {\r\n  allContentfulService {\r\n    edges {\r\n      node {\r\n        title\r\n        description {\r\n          childMarkdownRemark {\r\n            html\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  allContentfulWorks {\r\n    edges {\r\n      node {\r\n        siteName\r\n        url\r\n        image {\r\n          fluid(maxWidth: 600) {\r\n            base64\r\n            aspectRatio\r\n            src\r\n            srcSet\r\n            srcWebp\r\n            srcSetWebp\r\n            sizes\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  jsLogo: file(relativePath: { eq: \"js-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 150, height: 150) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  javaLogo: file(relativePath: { eq: \"java-logo.jpg\" }) {\r\n    childImageSharp {\r\n      fixed(width: 150, height: 150) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  springLogo: file(relativePath: { eq: \"spring-logo.jpg\" }) {\r\n    childImageSharp {\r\n      fixed(width: 150, height: 150) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n\r\n  gitLogo: file(relativePath: { eq: \"git-logo.jpg\" }) {\r\n    childImageSharp {\r\n      fixed(width: 150, height: 150) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n\r\n  dockerLogo: file(relativePath: { eq: \"docker-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 150, height: 150) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n\r\n  oracleLogo: file(relativePath: { eq: \"oracle-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 150, height: 150) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n`;","import React, { Component } from \"react\";\r\nimport Img from \"gatsby-image\";\r\n\r\nexport default class service extends Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <div className=\"service section\" id=\"Service\">\r\n        <div className=\"container\">\r\n          <div className=\"section-head\">\r\n            <h2>Conhecimentos</h2>\r\n          </div>\r\n          <div className=\"row\">\r\n            <Img\r\n                fixed={data.jsLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n  \r\n            <Img\r\n                fixed={data.javaLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n\r\n            <Img\r\n                fixed={data.springLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n \r\n            <Img\r\n                fixed={data.oracleLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n  \r\n            <Img\r\n                fixed={data.gitLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n\r\n            <Img\r\n                fixed={data.dockerLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n           {/*  {data.edges.map((item, index) => {\r\n              return (\r\n                <div key={index} className=\"col-md-4 mb-3\">\r\n                  <div className=\"service-main\">\r\n                    <h3>{item.node.title}</h3>\r\n                    <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: item.node.description.childMarkdownRemark.html\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })} */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Img from \"gatsby-image\";\r\n\r\nexport default class work extends Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <div className=\"work section\" id=\"Work\">\r\n        <div className=\"container\">\r\n          <div className=\"section-head\">\r\n            <h2 className=\"text-center\">Projetos</h2>\r\n          </div>\r\n          <ul className=\"work-list\">\r\n            {data.edges.map((item, index) => {\r\n              return (\r\n                <li key={index} className=\"item\">\r\n                  <div className=\"inner\">\r\n                    <a href={item.node.url}>\r\n                      <Img\r\n                        fixed={item.node.image.fluid}\r\n                        objectFit=\"cover\"\r\n                        objectPosition=\"50% 50%\"\r\n                      />\r\n                      <span className=\"name\">{item.node.siteName}</span>\r\n                    </a>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}