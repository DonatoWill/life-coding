{"version":3,"sources":["webpack:///./src/components/professional-experience.js","webpack:///./src/pages/portfolio.js","webpack:///./src/components/service.js","webpack:///./src/components/work.js"],"names":["ProfessionalExperience","render","this","props","data","className","id","data-date","Component","renderLoader","Portfolio","title","keywords","fallback","allContentfulWorks","pageQuery","service","fixed","jsLogo","childImageSharp","javaLogo","springLogo","oracleLogo","gitLogo","dockerLogo","angularLogo","hibernateLogo","work","uniqueProjects","Array","from","Set","edges","itens","map","item","index","includes","node","url","push","key","href","target","fluid","image","objectFit","objectPosition","siteName"],"mappings":"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","file":"component---src-pages-portfolio-js-30e05a7516ec49bc61b7.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class ProfessionalExperience extends Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <div className=\"work\" id=\"Work\">\r\n        <div className=\"container\">\r\n          <div className=\"section-head\">\r\n            <h2 className=\"text-center\">Experiência Profissional</h2>\r\n          </div>\r\n          <ul className=\"timeline\">\r\n            <li className=\"event\">\r\n              <span className=\"double-year-experience\">2019 - 2020</span>\r\n              <h3>Bionexo</h3>\r\n              <p>Implantação de novos módulos e manutenção de Sistema para Aquisição e\r\n                  Gestão de Materiais de Alto Custo (OPME) para hospitais, utilizando\r\n                  metodologias ágeis como scrum e kanban, participando dos processos de\r\n                  análise, desenvolvimento e deploy em produção\r\n              </p>\r\n              <ul className=\"technologies\">\r\n                <li>Java</li>\r\n                <li>Spring</li>\r\n                <li>Oracle</li>\r\n                <li>Redis</li>\r\n                <li>Docker</li>\r\n              </ul>\r\n              <ul className=\"technologies\">\r\n                <li>AWS</li>\r\n                <li>Git</li>\r\n                <li>Linux</li>\r\n                <li>JS</li>\r\n                <li>Web</li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"event\" data-date=\"2005\">\r\n              <span className=\"double-year-experience\">2018 - 2019</span>\r\n              <h3>T2S - Tecnologia, Soluções e Sistemas</h3>\r\n              <p>Desenvolvimento de soluções para o Setor Portuário, criando sistemas utilizando diferentes tipos de linguagens e metodologias no principais terminais brasileiros.</p> \r\n              <p>- Automação de TDR (terminal departure report), sistema que automatiza o preenchimento do documento, de acordo com os dados do terminal e o modelo de relatório predefinido pelo armador. Trazendo mais produtividade para o planner.</p>\r\n              <p>- Desenvolvimento de sistema ADE02 , aplicação web que auxilia os recintos alfandegados a atender ao Ato Declaratório Executivo COANA/COTEC 02/2003, da Receita Federal do Brasil (RFB).</p>\r\n              <p>- Desenvolvimento Portal Intitucional e de Serviços Tecon Suape.</p> \r\n              <ul className=\"technologies\">\r\n                <li>Java</li>\r\n                <li>Spring</li>\r\n                <li>Oracle</li>\r\n                <li>Postgres</li>\r\n                <li>C#</li>\r\n              </ul>\r\n              <ul className=\"technologies\">\r\n                <li>Angular</li>\r\n                <li>Bootstrap</li>\r\n                <li>Git</li>\r\n                <li>Groovy</li>\r\n                <li>JS</li>\r\n              </ul>   \r\n            </li>\r\n            <li className=\"event\" id=\"date\" data-date=\"2009\">\r\n              <span className=\"double-year-experience\">2017  - 2018</span>\r\n              <h3>Agência de Inovação INOVA Paula Souza</h3>\r\n              <p>Desenvolvimento de sistema Java Web utilizando HTML, CSS, JavaScript, AngularJS, JQuery, Bootstrap 3, VisualSVN Server para o controle de versionamento, back-end utilizando Java, realizando requisições com o Banco de Dados (PostegreSQL), controle de acesso e sessão e sistema de mailing em conjunto com a ferramenta Sendgrid.\r\n</p>\r\n              <ul className=\"technologies\">\r\n                <li>Java</li>\r\n                <li>Spring</li>\r\n                <li>Oracle</li>\r\n                <li>Git</li>\r\n                <li>Web</li>\r\n              </ul>\r\n              <ul className=\"technologies\">\r\n                <li>AngularJS</li>\r\n                <li>Bootstrap</li>                \r\n                <li>JS</li>\r\n              </ul>      \r\n            </li> \r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, lazy, Suspense } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Service from \"../components/service\";\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport Work from \"../components/work\";\r\nimport ProfessionalExp from \"../components/professional-experience\";\r\n\r\n/* const ProfessionalExp = lazy(() => import('../components/professional-experience'));\r\nconst Work = lazy(() => import('../components/work'));\r\nconst Service = lazy(() => import('../components/service')); */\r\n\r\nconst renderLoader = () => <p>Carregando</p>;\r\nexport default class Portfolio extends Component {\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        return (\r\n            <Layout>\r\n                <SEO\r\n                    title=\"Portfolio\"\r\n                    keywords={[`Donato William`, `Backend Developer`, `Developer`, `Blogs`]}\r\n                />\r\n                <div className=\"site-container blogs-page\" id=\"Blogs\">\r\n                    <div className=\"container\">\r\n                        <Suspense fallback={renderLoader()}><Service data={data}></Service></Suspense>\r\n                        <Suspense fallback={renderLoader()}><ProfessionalExp data={data.allContentfulWorks}></ProfessionalExp></Suspense>\r\n                        <Suspense fallback={renderLoader()}><Work data={data.allContentfulWorks}></Work></Suspense>    \r\n\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n      );\r\n    }\r\n  }\r\n\r\nexport const pageQuery = graphql`\r\nquery PortfolioQuery {\r\n  allContentfulService {\r\n    edges {\r\n      node {\r\n        title\r\n        description {\r\n          childMarkdownRemark {\r\n            html\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  allContentfulWorks {\r\n    edges {\r\n      node {\r\n        siteName\r\n        url\r\n        image {\r\n          fluid(maxWidth: 600) {\r\n            base64\r\n            aspectRatio\r\n            src\r\n            srcSet\r\n            srcWebp\r\n            srcSetWebp\r\n            sizes\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  jsLogo: file(relativePath: { eq: \"js-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  javaLogo: file(relativePath: { eq: \"java-logo.jpg\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  springLogo: file(relativePath: { eq: \"spring-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  gitLogo: file(relativePath: { eq: \"git-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  dockerLogo: file(relativePath: { eq: \"docker-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  oracleLogo: file(relativePath: { eq: \"oracle-logo.jpg\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  angularLogo: file(relativePath: { eq: \"angular-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n  hibernateLogo: file(relativePath: { eq: \"hibernate-logo.png\" }) {\r\n    childImageSharp {\r\n      fixed(width: 100, height: 100) {\r\n        ...GatsbyImageSharpFixed\r\n      }\r\n    }\r\n  }\r\n}\r\n`;","import React, { Component } from \"react\";\r\nimport Img from \"gatsby-image\";\r\n\r\nexport default class service extends Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <div className=\"service section\" id=\"Service\">\r\n        <div className=\"container\">\r\n          <div className=\"section-head\">\r\n            <h2>Conhecimentos</h2>\r\n          </div>\r\n          <div className=\"row\">\r\n            <Img\r\n                fixed={data.jsLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n  \r\n            <Img\r\n                fixed={data.javaLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n\r\n            <Img\r\n                fixed={data.springLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n \r\n            <Img\r\n                fixed={data.oracleLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n  \r\n            <Img\r\n                fixed={data.gitLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n\r\n            <Img\r\n                fixed={data.dockerLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n\r\n            <Img\r\n                fixed={data.angularLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n            <Img\r\n                fixed={data.hibernateLogo.childImageSharp.fixed}\r\n                className=\"customImg\"\r\n            />\r\n           {/*  {data.edges.map((item, index) => {\r\n              return (\r\n                <div key={index} className=\"col-md-4 mb-3\">\r\n                  <div className=\"service-main\">\r\n                    <h3>{item.node.title}</h3>\r\n                    <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: item.node.description.childMarkdownRemark.html\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })} */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Img from \"gatsby-image\";\r\n\r\nexport default class work extends Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    const uniqueProjects = Array.from(new Set(data.edges));\r\n    const itens = [];\r\n    return (\r\n      <div className=\"work section\" id=\"Work\">\r\n        <div className=\"container\">\r\n          <div className=\"section-head\">\r\n            <h2 className=\"text-center\">Projetos</h2>\r\n          </div>\r\n          <ul className=\"work-list\">\r\n            {      \r\n            uniqueProjects.map((item, index) => {\r\n              if(itens.includes(item.node.url)){\r\n                return(null);\r\n              }else{\r\n                itens.push(item.node.url);              \r\n                return (\r\n                  <li key={index} className=\"item\">\r\n                    <div className=\"inner\">\r\n                      <a href={item.node.url} target=\"_blank\">\r\n                        <Img\r\n                          fluid={item.node.image.fluid}\r\n                          objectFit=\"cover\"\r\n                          objectPosition=\"50% 50%\"\r\n                        />\r\n                        <span className=\"name\">{item.node.siteName}</span>\r\n                      </a>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              }\r\n            })\r\n          }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}